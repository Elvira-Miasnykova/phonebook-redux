{"version":3,"file":"static/js/437.8c93f8a9.chunk.js","mappings":"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","sources":["components/Box.js","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.jsx","components/Contacts/ContactsList.styled.js","components/Contacts/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography,\n } from 'styled-system'\n\nexport const Box = styled.div`\n  ${color}\n  ${space}\n  ${layout}\n  ${flexbox}\n  ${grid}\n  ${background}\n  ${border}\n  ${position}\n  ${shadow}\n  ${typography}\n`","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;\n\nexport const getFilteredContacts = createSelector(\n[getContacts, getFilter], (contacts, filter) => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    //console.log('normalizedFilter',normalizedFilter);\n        return contacts.filter(contact => (contact.name.toLocaleLowerCase().includes(normalizedFilter)))\n}\n)\n\n","import { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport { TextField, Button } from '@mui/material';\n//import FormikField  from '../FormikField';\nimport { nanoid } from 'nanoid';\n//import { Box } from \"../Box\";\n// import {  ButtonStyled } from \"./ContactsForm.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { getContacts } from \"redux/contacts/selectors\";\n\nexport function ContactsForm() { \n    const initialValues = {\n        name: \"\",\n        number: \"\",\n    };\n\n    const validationSchema = yup.object().shape({\n        name: yup.string()\n            .min(2, \"Too Short!\")\n            .required(\"This field is required\"),\n        number: yup.number()\n            .min(8, \"The number is invalid\")\n            .required(\"This field is required\"),\n\n    }\n    )\n      \n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n    \n    const addNewContact = (newContact) => {\n    const foundContact = contacts.find(contact => contact.name === newContact.name);\n    \n    (foundContact)\n      ? window.alert(`${newContact.name} is alredy in contacts`)\n      : dispatch(addContact(newContact))\n    console.log(addContact(newContact));\n  };\n    \n    const handleSubmit = (values, {resetForm}) => {\n        const newContact = {\n            ...values,\n            id: nanoid(),\n        };\n        addNewContact(newContact);\n        console.log(newContact);\n        resetForm();\n        \n\n    };\n\n    \n    \n    return ( \n        <Formik initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={handleSubmit}\n        >\n            {({dirty, isValid}) => {\n                return (\n                <Form>\n                <Field\n                as={ TextField}\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter contacts name\"\n                    variant=\"standard\"\n                />\n                <p>\n                    <ErrorMessage name=\"name\"/>\n                </p>\n                {/* <FormikField/> */}\n                <Field\n                as={ TextField}\n                    type=\"tel\"\n                    name=\"number\"\n                    placeholder=\"Enter contacts number\"\n                    variant=\"standard\"\n                />\n                <p>\n                    <ErrorMessage name=\"number\"/>\n                </p>\n                <Button disabled={!dirty || !isValid} type=\"submit\">Add contact</Button>\n            </Form>\n            )\n            }}\n                     \n            </Formik>\n            \n        );\n \n}","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    font-weight: ${p => p.theme.fontWeights.bold};\n    margin-bottom: ${p => p.theme.space[3]}px;\n    display: flex;\n    align-items: center;\n`;\n\nexport const ContactDescription = styled.p`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-right: ${p => p.theme.space[4]}px;\n`;\n\nexport const ContactButton = styled.button`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    padding-left: ${p => p.theme.space[2]}px;\n    padding-right: ${p => p.theme.space[2]}px;\n    padding-bottom: ${p => p.theme.space[1]}px;\n    padding-top: ${p => p.theme.space[1]}px;\n    margin-right: ${p => p.theme.space[0]}px;\n    border: ${p => p.theme.borders.normal};\n    border-radius: ${p => p.theme.radii.normal};\n    cursor: pointer;\n    margin-left: auto;\n`;","import { Box } from 'components/Box';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { getFilteredContacts } from 'redux/contacts/selectors';\nimport { ContactItem, ContactButton, ContactDescription } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n    const dispatch = useDispatch();\n    const visibleContacts = useSelector(getFilteredContacts);\n\n    const contactDelete = (contactId) => {\n        dispatch(deleteContact(contactId))\n    };\n        \n    return (\n        <Box as=\"ul\" p={4} border=\"normal\" borderColor=\"accent\" borderRadius=\"normal\">\n            {visibleContacts.map((contact) => \n                 <ContactItem key={contact.id}>\n                        <ContactDescription>{contact.name}:</ContactDescription>\n                        <ContactDescription>{contact.number}</ContactDescription>\n                        <ContactButton type=\"button\" onClick={() => contactDelete(contact.id)}>Delete</ContactButton>\n                    </ContactItem>\n            )}\n        </Box>\n    )\n};\n\nContactsList.prototype = {\n    contacts: PropTypes.arrayOf(PropTypes.exact({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    })).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};","import styled from 'styled-components';\n\nexport const LabelStyled = styled.label`\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n    display: block;\n    text-align: center;\n`;\n\nexport const InputStyled = styled.input`\n    border: ${p => p.theme.borders.normal};\n    border-color: ${p => p.theme.colors.black};\n    border-radius: ${p => p.theme.radii.normal};\n    width: 60%;\n    height: ${p => p.theme.space[5]}px;\n    :hover{\n        border-color: ${p => p.theme.colors.accent};\n    };\n`;","import PropTypes from 'prop-types';\nimport { Box } from \"components/Box\";\nimport { LabelStyled, InputStyled } from \"./Filter.styled\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n\n    const dispatch = useDispatch();\n    const filter = useSelector(state => state.filter);\n\n    const changeFilter = (e) => {\n    dispatch(setFilter(e.currentTarget.value))\n    console.log('setFilter', setFilter(e.currentTarget.value));\n    };\n    \n    return (\n        <Box mb={4}>\n            <LabelStyled>\n                Find contacts by name\n                <InputStyled type=\"text\" value={filter} onChange={changeFilter}/>\n            </LabelStyled>\n        </Box>\n    )\n};\n\nFilter.prototype = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};","import styled from 'styled-components';\n\nexport const Header = styled.h1`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[5]}px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const Title = styled.h2`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[5]}px;\n    margin-bottom: ${p => p.theme.space[4]}px;\n`;","import { ContactsForm } from '../../components/ContactsForm/ContactsForm';\nimport { ContactsList } from '../../components/Contacts/ContactsList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Box } from '../../components/Box';\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { Header, Title } from './Contacts.styled';\n\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  \n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  \n  return (\n    <Box display=\"flex\" flexDirection=\"row\"\n      justifyContent=\"space-between\"\n      bg=\"muted\" p={4} border=\"normal\" borderColor=\"lightGray\" borderRadius=\"normal\"\n      width=\"80%\"\n      boxShadow=\"0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16)\"\n      textAlign=\"center\" margin=\"0 auto\">\n      <Box as=\"div\" >\n        <Header>Please, fill in</Header>\n        <ContactsForm />\n      </Box>\n\n      <Box as=\"div\" >\n        <Title>Contacts</Title>\n        <Filter />\n        {isLoading && !error && <Loader/>}\n        {error && <p> {error} </p>}\n        <ContactsList />\n      </Box>\n    </Box>\n  )\n};\n\nexport default Contacts;"],"names":["Box","styled","div","_templateObject","_taggedTemplateLiteral","color","space","layout","flexbox","grid","background","border","position","shadow","typography","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilteredContacts","createSelector","filter","normalizedFilter","toLocaleLowerCase","contact","name","includes","ContactsForm","validationSchema","yup","shape","min","required","number","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","onSubmit","handleSubmit","values","_ref","resetForm","newContact","id","nanoid","find","window","alert","concat","addContact","console","log","addNewContact","children","_ref2","dirty","isValid","_jsxs","Form","Field","as","TextField","type","placeholder","variant","ErrorMessage","Button","disabled","ContactItem","li","p","theme","colors","black","fonts","body","fontSizes","fontWeights","bold","ContactDescription","_templateObject2","ContactButton","button","_templateObject3","borders","normal","radii","ContactsList","visibleContacts","borderColor","borderRadius","map","onClick","contactDelete","contactId","deleteContact","prototype","PropTypes","isRequired","onDeleteContact","LabelStyled","label","InputStyled","input","accent","Filter","mb","value","onChange","e","setFilter","currentTarget","Header","h1","Title","h2","Contacts","useEffect","fetchContacts","display","flexDirection","justifyContent","bg","width","boxShadow","textAlign","margin","Loader"],"sourceRoot":""}